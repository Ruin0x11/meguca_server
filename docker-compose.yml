version: '3.3'

services:
    # watchtower:
    #     image: containrrr/watchtower
    #     networks:
    #         - misaka
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock

    nginx-web:
      image: nginx
      labels:
          com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
      container_name: ${NGINX_WEB:-nginx-web}
      restart: always
      ports:
        - "${IP:-0.0.0.0}:${DOCKER_HTTP:-80}:80"
        - "${IP:-0.0.0.0}:${DOCKER_HTTPS:-443}:443"
      networks:
        - misaka
      volumes:
        - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
        - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
        - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
        - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
        - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
        - ${NGINX_FILES_PATH:-./data}/network_internal.conf:/etc/nginx/network_internal.conf
      logging:
        driver: ${NGINX_WEB_LOG_DRIVER:-json-file}
        options:
          max-size: ${NGINX_WEB_LOG_MAX_SIZE:-4m}
          max-file: ${NGINX_WEB_LOG_MAX_FILE:-10}

    nginx-proxy:
      depends_on:
        - nginx-web
      image: jwilder/docker-gen:0.7.6
      command: -notify-sighup ${NGINX_WEB:-nginx-web} -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
      container_name: ${DOCKER_GEN:-nginx-gen}
      restart: always
      environment:
        SSL_POLICY: ${SSL_POLICY:-Mozilla-Intermediate}
      networks:
        - misaka
      volumes:
        - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
        - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
        - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
        - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:ro
        - ${NGINX_FILES_PATH:-./data}/htpasswd:/etc/nginx/htpasswd:ro
        - /var/run/docker.sock:/tmp/docker.sock:ro
        - ./nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      logging:
        driver: ${NGINX_GEN_LOG_DRIVER:-json-file}
        options:
          max-size: ${NGINX_GEN_LOG_MAX_SIZE:-2m}
          max-file: ${NGINX_GEN_LOG_MAX_FILE:-10}

    nginx-letsencrypt:
      depends_on:
        - nginx-proxy
      image: jrcs/letsencrypt-nginx-proxy-companion
      container_name: ${LETS_ENCRYPT:-nginx-letsencrypt}
      restart: always
      networks:
        - misaka
      volumes:
        - ${NGINX_FILES_PATH:-./data}/conf.d:/etc/nginx/conf.d
        - ${NGINX_FILES_PATH:-./data}/vhost.d:/etc/nginx/vhost.d
        - ${NGINX_FILES_PATH:-./data}/html:/usr/share/nginx/html
        - ${NGINX_FILES_PATH:-./data}/certs:/etc/nginx/certs:rw
        - /var/run/docker.sock:/var/run/docker.sock:ro
      environment:
        NGINX_DOCKER_GEN_CONTAINER: ${DOCKER_GEN:-nginx-gen}
        NGINX_PROXY_CONTAINER: ${NGINX_WEB:-nginx-web}
        REUSE_PRIVATE_KEYS: "true"
        DEFAULT_EMAIL: "ipickering2@gmail.com"
        DEBUG: "true"
      logging:
        driver: ${NGINX_LETSENCRYPT_LOG_DRIVER:-json-file}
        options:
          max-size: ${NGINX_LETSENCRYPT_LOG_MAX_SIZE:-2m}
          max-file: ${NGINX_LETSENCRYPT_LOG_MAX_FILE:-10}

    # whoami:
    #     image: jwilder/whoami
    #     environment:
    #         - VIRTUAL_HOST=whoami.nori.moe
    #         - LETSENCRYPT_HOST=whoami.nori.moe
    #     networks:
    #       - misaka

    #glances:
    #    image: nicolargo/glances
    #    #network_mode: host
    #    pid: host
    #    expose:
    #        - "61208"
    #    ports:
    #        - "61208:61208"
    #        - "61209:61209"
    #    volumes:
    #        - /var/run/docker.sock:/tmp/docker.sock:ro
    #    environment:
    #        - VIRTUAL_HOST=nozoku.nori.daikon
    #        - VIRTUAL_PORT=61208
    #        - NETWORK_ACCESS=internal
    #        - GLANCES_OPT=-w
    #    networks:
    #      - misaka

    shaarli:
      image: shaarli/shaarli
      volumes:
          - /mnt/hibiki/config/shaarli/cache:/var/www/shaarli/cache
          - /mnt/hibiki/config/shaarli/data:/var/www/shaarli/data
          - /mnt/hibiki/config/shaarli/tpl:/var/www/shaarli/tpl
      environment:
          - VIRTUAL_HOST=share.nori.moe
          - LETSENCRYPT_HOST=share.nori.moe
      networks:
        - misaka

    plex:
      image: plexinc/pms-docker
      expose:
        - "32400"
      #ports:
      #  - "32400:32400"
      #  - "3005:3005"
      #  - "8324:8324"
      #  - "32469:32469"
      #  - "1900:1900"
      #  - "32410:32410"
      #  - "32412:32412"
      #  - "32413:32413"
      #  - "32414:32414"
      networks:
        - misaka
      volumes:
        - /mnt/hibiki/config/plex/config:/config
        - /mnt/hibiki/config/plex/transcode:/transcode
        - /mnt/hibiki:/data
        - /var/run/docker.sock:/tmp/docker.sock:ro
      environment:
        - HOSTNAME="plex"
        - TZ="America/Los_Angeles"
        #- ADVERTISE_IP="http://192.168.1.100:32400/"
        - VIRTUAL_HOST=plex.nori.moe
        - VIRTUAL_PORT=32400
        - LETSENCRYPT_HOST=plex.nori.moe


              # jenkins:
              #     build: ./blueocean
              #     expose:
              #         - "8080"
              #     volumes:
              #         - /var/lib/jenkins:/var/jenkins_home
              #         - /var/run/docker.sock:/var/run/docker.sock
              #     environment:
              #         - VIRTUAL_HOST=aoiumi.nori.moe
              #         - VIRTUAL_PORT=8080
              #         - NETWORK_ACCESS=internal
              #         - HOME=/var/jenkins_home
              #
              # site:
              #     build: ./site
              #     user: "1000"
              #     expose:
              #         - "8008"
              #     volumes:
              #         - /var/www/nori.moe/md:/data/site/md
              #         - /etc/group:/etc/group:ro
              #         - /etc/passwd:/etc/passwd:ro
              #     environment:
              #         - VIRTUAL_HOST=nori.daikon
              #         - VIRTUAL_PORT=8008

              # scribl:
              #     build: ./scribl
              #     depends_on:
              #       - scribl_db
              #     command: rackup -p 3001 --host 0.0.0.0
              #     expose:
              #         - "3001"
              #     ports:
              #         - "3001:3001"
              #     environment:
              #         - VIRTUAL_HOST=scribl.nori.moe
              # scribl_db:
              #     image: postgres

    emby:
      image: emby/embyserver
      ports:
          - "8096:8096"
      networks:
          - misaka
      volumes:
          - /mnt/hibiki/config/emby:/config
          - /mnt/hibiki/video:/mnt/share
          - /mnt/hibiki/voice:/mnt/share2
      environment:
        - VIRTUAL_HOST=emby.nori.daikon
        - VIRTUAL_PORT=8096
        - UID=1000
        - GID=1000

          #html-server:
          #  image: localhost:5000/html-server:v1
          #  ports:
          #      - "800:80"
          #  networks:
          #      - misaka
          #  environment:
          #    - VIRTUAL_HOST=site.nori.moe
          #    - VIRTUAL_PORT=80
          #    - UID=1000
          #    - GID=1000

    # wiki:
    #   image: bitnami/dokuwiki
    #   ports:
    #       - "5001:80"
    #       - "5002:443"
    #   networks:
    #       - misaka
    #   volumes:
    #       - /mnt/hibiki/config/dokuwiki:/bitnami
    #   environment:
    #     - VIRTUAL_HOST=wiki.nori.moe
    #     - VIRTUAL_PORT=80
    #     - LETSENCRYPT_HOST=wiki.nori.moe
    #     - UID=1000
    #     - GID=1000

    # wiki2:
    #   image: marcelhuberfoo/docker-gitit
    #   ports:
    #     - "49157:5001"
    #   networks:
    #     - misaka
    #   volumes:
    #     - /mnt/hibiki/config/gitit:/data
    #   environment:
    #     - VIRTUAL_HOST=wiki2.nori.daikon
    #     - VIRTUAL_PORT=5001
    #     - GIT_COMMITTER_NAME=nori
    #     - GIT_COMMITTER_EMAIL=nori@nori.moe

    lanraragi:
      image: difegue/lanraragi
      ports:
          - "3000:3000"
      networks:
          - misaka
      volumes:
          - /mnt/hibiki/araragi:/home/koyomi/lanraragi/content
          - /mnt/hibiki/config/lanraragi/database:/home/koyomi/lanraragi/database
          - /mnt/hibiki/config/lanraragi/lrr.conf:/home/koyomi/lanraragi/lrr.conf
      environment:
        - VIRTUAL_HOST=araragi.nori.daikon
        - VIRTUAL_PORT=3000
        - LRR_UID=1000
        - LRR_GID=1000

    manga:
      image: gotson/komga
      networks:
        - misaka
      volumes:
        - type: "bind"
          source: "/mnt/hibiki/araragi"
          target: "/books/araragi"
        - type: "bind"
          source: "/mnt/hibiki/manga"
          target: "/books/manga"
        - type: "bind"
          source: "/mnt/hibiki/config/komga"
          target: "/config"
      user: "1000:1000"
      environment:
        - VIRTUAL_HOST=manga.nori.moe
        - VIRTUAL_PORT=8080
        - LETSENCRYPT_HOST=manga.nori.moe
        - HTTPS_METHOD=noredirect
        - KOMGA_LIBRARIES_SCAN_DIRECTORY_EXCLUSIONS=#recycle,@eaDir

    # elona-js:
    #   image: localhost:5000/elona-js:v1
    #   networks:
    #     - misaka
    #   environment:
    #     - VIRTUAL_HOST=elonajs.nori.moe
    #     - VIRTUAL_PORT=80
    #     - LETSENCRYPT_HOST=elonajs.nori.moe
    #     - UID=1000
    #     - GID=1000

    # synapse
    #   image: localhost:5000/synapse
    #   networks:
    #       - misaka
    #   expose:
    #       - "16493:16493"
    #       - "8412:8412"
    #       - "16362:16362"
    #       - "16309:16309"
    #   volumes:
    #       - /mnt/hibiki/synapse:/synapse/downloads
    #   environment:
    #     - UID=1000
    #     - GID=1000

    # synapse:
    #   image: localhost:5000/synapse
    #   networks:
    #       - misaka
    #   environment:
    #     - NETWORK_ACCESS=internal
    #     - UID=1000
    #     - GID=1000

    # receptor:
    #   image: localhost:5000/receptor
    #   networks:
    #       - misaka
    #   environment:
    #     - VIRTUAL_HOST=receptor.nori.moe
    #     - VIRTUAL_PORT=3000
    #     - NETWORK_ACCESS=internal
    #     - HTTPS_METHOD=noredirect
    #     - UID=1000
    #     - GID=1000

    site2:
      build: ./site2
      networks:
        - misaka
      environment:
        - VIRTUAL_HOST=hello.nori.moe
        - VIRTUAL_PORT=8080
        - LETSENCRYPT_HOST=hello.nori.moe
        - UID=1000
        - GID=1000

    szurupull:
      build:
        context: /home/nori/build/work/szurupull
      ports:
        - 4000:4000
      networks:
        - misaka
      depends_on:
        - szurupull_db
      environment:
        - SECRET_KEY_BASE=${SECRET_KEY_BASE_SZURUPULL}
        - DATABASE_HOST=szurupull_db
        - DATABASE_URL=ecto://postgres:postgres@szurupull_db/postgres
        - VIRTUAL_HOST=szurupull.nori.moe
        - VIRTUAL_PORT=4000
        - LETSENCRYPT_HOST=szurupull.nori.moe
        - UID=1000
        - GID=1000
        - MIX_ENV=prod

    szurupull_db:
      image: postgres:9.6
      volumes:
        - "/mnt/hibiki/config/szurupull/sql:/var/lib/postgresql/data"
      networks:
        - misaka
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres

    calibre_web:
      image: technosoft2000/calibre-web
      ports:
        - 5005:8083
      volumes:
        - "/mnt/hibiki/config/calibre-web/app:/calibre-web/app"
        - "/mnt/hibiki/config/calibre-web/kindlegen:/calibre-web/kindlegen"
        - "/mnt/hibiki/config/calibre-web/config:/calibre-web/config"
        - "/mnt/hibiki/book:/books"
      networks:
        - misaka
      environment:
        - PGID=1000
        - PUID=1000
        - USE_CONFIG_DIR=true
        - VIRTUAL_HOST=toshokan.nori.moe
        - LETSENCRYPT_HOST=toshokan.nori.moe

    niacademy:
      image: niacademy:0.1.0
      build:
        context: ./app/niacademy
        args:
          - SECRET_KEY_BASE=${SECRET_KEY_BASE_NIACADEMY}
          - DATABASE_URL=ecto://postgres:postgres@niacademy_db/postgres
          - IMAGES_PATH=/app/images
          - GLOBAL_USER=nonbirithm
          - PASSWORD=${NIACADEMY_PASSWORD}
          - LETSENCRYPT_HOST=niacademy.nori.moe
          - PORT=4000
      environment:
        - SECRET_KEY_BASE=${SECRET_KEY_BASE_NIACADEMY}
        - DATABASE_HOST=niacademy_db
        - DATABASE_USER=postgres
        - DATABASE_DB=postgres
        - DATABASE_URL=ecto://postgres:postgres@niacademy_db/postgres
        - IMAGES_PATH=/app/images
        - GLOBAL_USER=nonbirithm
        - PASSWORD=${NIACADEMY_PASSWORD}
        - VIRTUAL_HOST=niacademy.nori.moe
        - VIRTUAL_PORT=4000
        - LETSENCRYPT_HOST=niacademy.nori.moe
      volumes:
        - /mnt/hibiki/config/niacademy/trove:/app/images
        - /mnt/hibiki/config/niacademy/regimens.yml:/app/regimens.yml
      ports:
        - 5006:4000
      networks:
        - misaka
      depends_on:
        - niacademy_db

    niacademy_db:
      image: postgres:9.6
      volumes:
        - /mnt/hibiki/config/niacademy/db:/var/lib/postgresql/data
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=postgres
        - POSTGRES_DB=postgres
      networks:
        - misaka

    litewrite:
      build: ./app/litewrite
      environment:
        - VIRTUAL_HOST=litewrite.nori.moe
        - VIRTUAL_PORT=8000
        - LETSENCRYPT_HOST=litewrite.nori.moe
      networks:
        - misaka

    radarr:
      image: ghcr.io/linuxserver/radarr
      container_name: radarr
      environment:
        - PUID=1000
        - PGID=100
        - TZ=America/Los_Angeles
        - VIRTUAL_HOST=radarr.nori.moe
        - VIRTUAL_PORT=7878
        - LETSENCRYPT_HOST=radarr.nori.moe
      volumes:
        - /mnt/hibiki/config/radarr:/config
        - /mnt/hibiki:/data
      ports:
        - 7878:7878
      restart: unless-stopped
      networks:
        - misaka

    jackett:
      image: ghcr.io/linuxserver/jackett
      container_name: jackett
      environment:
        - PUID=1000
        - PGID=100
        - TZ=America/Los_Angeles
        - AUTO_UPDATE=true #optional
        # - RUN_OPTS=<run options here> #optional
        - VIRTUAL_HOST=jackett.nori.moe
        - VIRTUAL_PORT=9117
        - LETSENCRYPT_HOST=jackett.nori.moe
      volumes:
        - /mnt/hibiki/config/jackett:/config
        - /mnt/hibiki/config/jackett_downloads:/downloads
      ports:
        - 9117:9117
      expose:
        - "9117"
      restart: unless-stopped
      networks:
        - misaka

    deluge:
      image: linuxserver/deluge
      container_name: deluge
      environment:
        - PUID=1000
        - PGID=100
        - TZ=America/Los_Angeles
        #- UMASK_SET=000 #optional
        #- DELUGE_LOGLEVEL=error #optional
        - VIRTUAL_HOST=deluge.nori.moe
        - VIRTUAL_PORT=8112
        - LETSENCRYPT_HOST=deluge.nori.moe
      ports:
        - 8112:8112
      volumes:
        - /mnt/hibiki/config/deluge:/config
        - /mnt/hibiki/deluge:/downloads
      restart: unless-stopped
      networks:
        - misaka

volumes:
    vhost:
    html:

networks:
    misaka:
        external: true
